{"version": "https://jsonfeed.org/version/1", "title": "Instructor (JS)", "home_page_url": "https://instructor-ai.github.io/instructor-js/", "feed_url": "https://instructor-ai.github.io/instructor-js/feed_json_updated.json", "description": "Enhancing OpenAI function calling with Zod", "icon": null, "authors": [{"name": "Jason Liu"}], "language": "en", "items": [{"id": "https://instructor-ai.github.io/instructor-js/blog/2024/01/01/anyscale/", "url": "https://instructor-ai.github.io/instructor-js/blog/2024/01/01/anyscale/", "title": "Structured Outputs with Anyscale and Zod", "content_html": "<h1>Structured Outputs with Anyscale and Zod</h1>\n<p>Open-source LLMS are gaining popularity, and the release of Anyscale's Mistral model has made it possible to obtain structured outputs using JSON schema at any scale. Instead of relying on a model's default output mode, you can utilize JSON schema to obtain structured outputs. This approach is a time-saving alternative to extensive prompt engineering.</p>\n<p>By the end of this blog post, you will learn how to effectively utilize instructor with Anyscale. But before we proceed, let's first explore the concept of patching.</p>", "image": "https://instructor-ai.github.io/instructor-js/assets/images/social/blog/posts/anyscale.png", "date_modified": "2024-03-05T20:36:33+00:00", "authors": [{"name": "jxnl"}], "tags": ["open source", "patching"]}, {"id": "https://instructor-ai.github.io/instructor-js/blog/2024/02/01/together/", "url": "https://instructor-ai.github.io/instructor-js/blog/2024/02/01/together/", "title": "Structured Outputs with Together and Zod", "content_html": "<h1>Structured Outputs with Together and Zod</h1>\n<p>Open-source LLMS are gaining popularity, and the release of Togethers's Mistral model has made it possible to obtain structured outputs using JSON schema. Instead of relying on a model's default output mode, you can utilize JSON schema to obtain structured outputs. This approach is a time-saving alternative to extensive prompt engineering.</p>\n<p>By the end of this blog post, you will learn how to effectively utilize instructor with Togethers. But before we proceed, let's first explore the concept of patching.</p>", "image": "https://instructor-ai.github.io/instructor-js/assets/images/social/blog/posts/together.png", "date_modified": "2024-03-05T20:36:33+00:00", "authors": [{"name": "jxnl"}], "tags": ["open source", "patching"]}]}